[Unit]
Description=Forgejo Runner Container
Requires=forgejo.service
After=forgejo.service

[Container]
ContainerName=forgejo-runner
Image=code.forgejo.org/forgejo/runner:6
Network=forgejo.network
Volume=forgejo-runner-data:/data:Z
Volume=/var/run/user/1000/podman/podman.sock:/var/run/docker.sock:Z
Secret=forgejo-shared-secret,type=env,target=FORGEJO_SHARED_SECRET
Exec=bash -ec ' \
  echo "--> 1/3: Waiting for Forgejo instance and registering runner..."; \
  while : ; do \
    forgejo-runner create-runner-file --connect --instance http://forgejo:3000 --name runner --secret "$FORGEJO_SHARED_SECRET" && break ; \
    echo "Registration failed, Forgejo may not be ready. Retrying in 5s..."; \
    sleep 5 ; \
  done ; \
  \
  echo "--> 2/3: Generating custom runner configuration from scratch..."; \
  RUNNER_TOKEN=$(grep -o "\"token\":\"[^\"]*\"" .runner | cut -d":" -f2 | tr -d "\"") ; \
  cat <<EOF > config.yml ; \
runner:
  name: ${HOSTNAME}
  log:
    level: debug
  actions:
    enabled: true
  labels:
    - "docker-cli:docker://code.forgejo.org/oci/docker:cli"
    - "node-bookworm:docker://code.forgejo.org/oci/node:20-bookworm"
agent:
  registration:
    token: ${RUNNER_TOKEN}
    address: http://forgejo:3000
task:
  defaults:
    timeout: 1h
cache:
  enabled: true
  dir: cache
  host:
    network: host
    envs:
      DOCKER_HOST: tcp://docker:2376
      DOCKER_TLS_VERIFY: 1
      DOCKER_CERT_PATH: /certs/client
    options: -v /certs/client:/certs/client
    valid_volumes:
      - /certs/client
EOF
  \
  echo "--> 3/3: Setting final permissions and starting daemon..."; \
  chown -R 1000:1000 /data ; \
  \
  exec forgejo-runner --config config.yml daemon \
'

[Service]
# This command runs on the host *before* the container starts.
# It ensures the required Podman secret exists, creating it if it doesn't.
ExecStartPre=-podman secret exists forgejo-shared-secret || openssl rand -hex 20 | tr -d '\n' | podman secret create forgejo-shared-secret -
Restart=on-failure

[Install]
WantedBy=default.target