[Unit]
Description=Forgejo Runner Container
Requires=forgejo.service
After=forgejo.service

[Container]
ContainerName=forgejo-runner
Image=code.forgejo.org/forgejo/runner:6
Volume=forgejo-runner-data:/data:Z
Volume=/var/run/user/1000/podman/podman.sock:/var/run/docker.sock:Z
Secret=forgejo-shared-secret,type=env,target=FORGEJO_SHARED_SECRET
Exec=bash -ec ' \
  echo "--> 1/3: Waiting to create runner registration file..."; \
  while : ; do \
    forgejo-runner create-runner-file --connect --instance http://forgejo:3000 --name runner --secret $FORGEJO_SHARED_SECRET && break ; \
    echo "Registration failed, retrying in 1s..."; \
    sleep 1 ; \
  done ; \
  \
  echo "--> 2/3: Customizing runner configuration files..."; \
  sed -i -e "s|\"labels\": null|\"labels\": [\"docker-cli:docker://code.forgejo.org/oci/docker:cli\",\"node-bookworm:docker://code.forgejo.org/oci/node:20-bookworm\"]|" .runner ; \
  forgejo-runner generate-config > config.yml ; \
  sed -i -e "s|  level: info|  level: debug|" config.yml ; \
  sed -i -e "s|network: .*|network: host|" config.yml ; \
  sed -i -e "s|^  envs:$$|  envs:\n    DOCKER_HOST: tcp://docker:2376\n    DOCKER_TLS_VERIFY: 1\n    DOCKER_CERT_PATH: /certs/client|" config.yml ; \
  sed -i -e "s|^  options:|  options: -v /certs/client:/certs/client|" config.yml ; \
  sed -i -e "s|  valid_volumes: \\[]$$|  valid_volumes:\n    - /certs/client|" config.yml ; \
  \
  echo "--> 3/3: Setting final permissions and starting daemon..."; \
  chown -R 1000:1000 /data ; \
  \
  exec forgejo-runner --config config.yml daemon \
'

[Service]
# This command runs on the host *before* the container starts.
# It ensures the required Podman secret exists, creating it if it doesn't.
ExecStartPre=-podman secret exists forgejo-shared-secret || openssl rand -hex 20 | podman secret create forgejo-shared-secret -
Restart=on-failure

[Install]
WantedBy=default.target